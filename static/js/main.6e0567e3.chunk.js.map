{"version":3,"sources":["serviceWorker.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","App","react_default","a","createElement","className","style","overflow","row","type","justify","col","id","sm","lg","es_button","size","shape","src","typography","Title","level","Text","textAlign","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+GC+FSC,MA3Gf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,UACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,mBAKNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAAEC,SAAU,WAC5CL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,KAAK,OAAOC,QAAQ,iBACvBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKC,GAAG,cAAcC,GAAI,GAAIC,GAAI,IAChCZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,eACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,+GAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQN,KAAK,UAAUO,KAAK,QAAQC,MAAM,IAA1C,gBAIJf,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,GACfZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKc,IAAI,6BAOnBhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKH,UAAU,UAAUI,KAAK,OAAOC,QAAQ,iBAC3CR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,KACjBZ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,IACfZ,EAAAC,EAAAC,cAACe,EAAA,EAAWC,MAAZ,CAAkBC,MAAO,IACzBnB,EAAAC,EAAAC,cAACe,EAAA,EAAWG,KAAZ,QAMJpB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKH,UAAU,UAAUI,KAAK,OAAOC,QAAQ,iBAC3CR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,IACfZ,EAAAC,EAAAC,cAACe,EAAA,EAAWC,MAAZ,CAAkBC,MAAO,IACzBnB,EAAAC,EAAAC,cAACe,EAAA,EAAWG,KAAZ,OAIFpB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,MAGnBZ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKH,UAAU,UAAUI,KAAK,OAAOC,QAAQ,iBAC3CR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,KACjBZ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,IACfZ,EAAAC,EAAAC,cAACe,EAAA,EAAWC,MAAZ,CAAkBC,MAAO,IACzBnB,EAAAC,EAAAC,cAACe,EAAA,EAAWG,KAAZ,WASVpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKH,UAAU,eAAeI,KAAK,OAAOC,QAAQ,iBAChDR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,GACfZ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAACiB,UAAW,YAAtB,wIAIFrB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,GACfZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,aACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,uBAGRF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAKE,GAAI,GAAIC,GAAI,IACfZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,eACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,sBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,oBAKVF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKH,UAAU,cAAcI,KAAK,OAAOC,QAAQ,iBAC/CR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,8BClGZmB,IAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAAQC,SAASC,eAAe,SF0H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6e0567e3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport { Layout, Typography, Button, Row, Col } from 'antd'\nimport './app.scss'\n\n// const { Header, Content, Footer } = Layout\n\nfunction App() {\n  return(\n    <div className=\"page-wrapper\">\n      <div className=\"page-header\">\n        <div className=\"container\">\n          <div className=\"brand font-questrial\">\n            <h1 className=\"lead-text\">allpay</h1>\n            <h5 className=\"sub-text\">incorporated</h5>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"page-content\">\n        <div className=\"banner\">\n          <div className=\"container\" style={{ overflow: 'hidden' }}>\n            <Row type=\"flex\" justify=\"space-between\">\n              <Col id=\"text-column\" sm={24} lg={12}>\n                <div className=\"text-wrapper\">\n                  <h1 className=\"title\">Allpay Inc.</h1>\n                  <p className=\"text-body\">Online payment solution for your business. Let your customers experience the convenience of paying online.</p>\n                </div>\n\n                <div className=\"call-to-action-wrapper\">\n                  <Button type=\"primary\" size=\"large\" shape=\"\">Learn more</Button>\n                </div>\n              </Col>\n\n              <Col sm={24} lg={8}>\n                <div className=\"image-wrapper\">\n                  <img src=\"/online-payment.png\"/>\n                </div>\n              </Col>\n            </Row>\n          </div>\n        </div>\n\n        <div className=\"features\">\n          <div className=\"container\">\n            <Row className=\"feature\" type=\"flex\" justify=\"space-between\">\n              <Col sm={24} lg={12}></Col>\n              <Col sm={24} lg={12}>\n                <Typography.Title level={2}>{/*More options*/}</Typography.Title>\n                <Typography.Text>\n                  {/*Enable a variety of payment options by connecting just once*/}\n                </Typography.Text>\n              </Col>\n            </Row>\n\n            <Row className=\"feature\" type=\"flex\" justify=\"space-between\">\n              <Col sm={24} lg={12}>\n                <Typography.Title level={2}>{/*Monitoring*/}</Typography.Title>\n                <Typography.Text>\n                  {/*Keep track of your transactions*/}\n                </Typography.Text>\n              </Col>\n              <Col sm={24} lg={12}></Col>\n            </Row>\n\n            <Row className=\"feature\" type=\"flex\" justify=\"space-between\">\n              <Col sm={24} lg={12}></Col>\n              <Col sm={24} lg={12}>\n                <Typography.Title level={2}>{/*Insights*/}</Typography.Title>\n                <Typography.Text>\n                  {/*Enable a variety of payment options by connecting just once*/}\n                </Typography.Text>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"page-footer font-questrial\">\n        <div className=\"container\">\n          <Row className=\"footer-links\" type=\"flex\" justify=\"space-between\">\n            <Col sm={24} lg={8}>\n              <h3>About allpay</h3>\n              <p style={{textAlign: 'justify'}}>\n                Allpay is an online payment solution for your business that aims to let your customers experience the convenience of paying online.\n              </p>\n            </Col>\n            <Col sm={24} lg={2}>\n              <h3 className=\"font-questrial\">Follow Us</h3>\n              <ul className=\"links\">\n                <li><a>Facebook</a></li>\n                <li><a>Instagram</a></li>\n                <li><a>Twitter</a></li>\n              </ul>\n            </Col>\n            <Col sm={24} lg={10}>\n              <h3 className=\"font-questrial\">Information</h3>\n              <ul className=\"links\">\n                <li><a>Contact Us</a></li>\n                <li><a>About Us</a></li>\n                <li><a>FAQ</a></li>\n              </ul>\n            </Col>\n          </Row>\n\n          <Row className=\"footer-copy\" type=\"flex\" justify=\"space-between\">\n            <p className=\"font-questrial\">2019 &copy; Allpay Inc.</p>\n          </Row>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport './index.scss'\n\nimport App from './components/App'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}